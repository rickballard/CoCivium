name: diagram-previews
on:
  workflow_dispatch:
  push:
    paths:
      - "docs/diagrams/**/*.mmd"
      - "docs/diagrams/**/*.vl.json"
      - ".github/workflows/diagram-previews.yml"
  pull_request:
    paths:
      - "docs/diagrams/**/*.mmd"
      - "docs/diagrams/**/*.vl.json"
      - ".github/workflows/diagram-previews.yml"

jobs:
  render:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    env:
      # Tell puppeteer where Chromium lives (we install it via apt below)
      PUPPETEER_EXECUTABLE_PATH: /usr/bin/chromium-browser
    steps:
      - uses: actions/checkout@v4

      - name: Install system deps (Chromium + fonts + canvas libs)
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            chromium-browser \
            fonts-noto fonts-noto-cjk fonts-noto-color-emoji \
            libfontconfig1 libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev librsvg2-dev

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Prime CLIs (local for npx)
        run: |
          npm i @mermaid-js/mermaid-cli@10.9.1 vega@5 vega-cli@5 vega-lite@5 canvas

      - name: Env debug
        shell: bash
        run: |
          set -euxo pipefail
          node --version
          npm  --version
          which chromium-browser || true
          chromium-browser --version || true
          npx -y @mermaid-js/mermaid-cli -V || true
          npx -y vega-lite vl2vg --help | head -n 2 || true
          npx -y vega vg2svg --help | head -n 2 || true
          echo "::group::Inputs"
          find docs/diagrams -type f \( -name "*.mmd" -o -name "*.vl.json" \) -print || true
          echo "::endgroup::"

      - name: Build Mermaid (mmd -> svg)
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p docs/diagrams/_previews/_errors
          while IFS= read -r -d '' f; do
            rel="${f#docs/diagrams/}"
            out="docs/diagrams/_previews/${rel%.mmd}-map.svg"
            log="docs/diagrams/_previews/_errors/${rel%.mmd}-map.log"
            mkdir -p "$(dirname "$out")" "$(dirname "$log")"
            if npx -y @mermaid-js/mermaid-cli -i "$f" -o "$out" -p .github/puppeteer.config.cjs --backgroundColor transparent \
                 2> "$log"; then
              echo "OK $f"
            else
              echo "::warning file=$f::mermaid preview FAILED (see $log)"
              rm -f "$out" || true
            fi
          done < <(find docs/diagrams -type f -name "*.mmd" -print0)

      - name: Build Vega-Lite (vl.json -> svg)
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p docs/diagrams/_previews/_errors
          while IFS= read -r -d '' f; do
            rel="${f#docs/diagrams/}"
            out="docs/diagrams/_previews/${rel%.vl.json}-chart.svg"
            log="docs/diagrams/_previews/_errors/${rel%.vl.json}-chart.log"
            mkdir -p "$(dirname "$out")" "$(dirname "$log")"
            if npx -y vega-lite vl2vg "$f" | npx -y vega vg2svg > "$out" 2> "$log"; then
              echo "OK $f"
            else
              echo "::warning file=$f::vega preview FAILED (see $log)"
              rm -f "$out" || true
            fi
          done < <(find docs/diagrams -type f -name "*.vl.json" -print0)

      - name: Upload previews (always)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: diagram-previews
          path: docs/diagrams/_previews/**

      - name: Commit preview artifacts (if changed)
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "build(preview): refresh diagram previews"
          file_pattern: docs/diagrams/_previews/**
          add_options: "-f"

      - name: Summarize log tails
        if: always()
        shell: bash
        run: |
          echo "### Error log tails" >> $GITHUB_STEP_SUMMARY
          for log in $(find docs/diagrams/_previews/_errors -type f -name '*.log' | sort); do
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "<details><summary>${log}</summary>" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            tail -n 80 "$log" >> $GITHUB_STEP_SUMMARY || true
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "</details>" >> $GITHUB_STEP_SUMMARY
          done
